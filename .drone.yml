kind: pipeline
type: docker
name: CI/CD Backend

trigger:
  branch:
    - main
  event:
    - push

steps:
  - name: Build & Push Docker Image
    image: plugins/docker
    when:
      paths:
        include:
          - app/**
          - Dockerfile
          - compose.yml
          - .drone.yml
    settings:
      username: 
        from_secret: DOCKERHUB_USERNAME # pragma: allowlist secret
      password: 
        from_secret: DOCKERHUB_TOKEN # pragma: allowlist secret
      repo: nhathuyd4hp/qrapp-backend
      cache_from:
        - nhathuyd4hp/qrapp-backend:latest
      build_args:
        - BUILDKIT_INLINE_CACHE=1
      tags:
        - latest
        - ${DRONE_COMMIT_SHA}
  - name: Deploy to VPS
    image: ghcr.io/appleboy/drone-ssh
    settings:
      host: 
        from_secret: SSH_HOST # pragma: allowlist secret
      username: 
        from_secret: SSH_USERNAME # pragma: allowlist secret
      password:
        from_secret: SSH_PASSWORD # pragma: allowlist secret
      port: 22
      command_timeout: 10000s
      script:
        - cd ~/Document/QRApp
        - mkdir -p Backend
        - cd ~/Document/QRApp/Backend
        - git clone https://github.com/QRBusiness/QRApp-BackEnd.git . || true
        - git restore . || true
        - git pull origin main || true
        - mkdir -p ./logs
        - chown -R 1001:1001 ./logs
        - source .env
        - docker network create QRNetwork || true
        - docker compose -f docker-compose.backend.yml -p qrapp-backend up --force-recreate -d
        - docker compose -f docker-compose.monitor.yml -p qrapp-monitor up -d --force-recreate

kind: pipeline
type: docker
name: Manual Deploy

trigger:
  event:
    - promote
  target:
    - production
steps:
  - name: Deploy to VPS
    image: ghcr.io/appleboy/drone-ssh
    settings:
      host: 
        from_secret: SSH_HOST # pragma: allowlist secret
      username: 
        from_secret: SSH_USERNAME # pragma: allowlist secret
      password:
        from_secret: SSH_PASSWORD # pragma: allowlist secret
      port: 22
      command_timeout: 10000s
      script:
        - cd ~/Document/QRApp
        - mkdir -p Backend
        - cd ~/Document/QRApp/Backend
        - git clone https://github.com/QRBusiness/QRApp-BackEnd.git . || true
        - git restore . || true
        - git pull origin main || true
        - mkdir -p ./logs
        - chown -R 1001:1001 ./logs
        - source .env
        - docker network create QRNetwork || true
        - docker compose -f docker-compose.backend.yml -p qrapp-backend up --force-recreate -d
        - docker compose -f docker-compose.monitor.yml -p qrapp-monitor up -d --force-recreate